#!/usr/bin/env node

const scripts_dir = './.scripts';
const git_hooks_dir = './.git/hooks';
const hooksDir = `${scripts_dir}/.hooks`;
const cliConfigDir = `${scripts_dir}/.config`;
const hooks_dir_from_git_hooks_dir = `../../${scripts_dir}/.hooks`;

const fsExtra = require('fs-extra');
const { spawnSync } = require('child_process');
const { program, Command } = require('commander');

const { hooks: configHooks, shellOptions } = require(`${cliConfigDir}/config.js`);

const constants = {
    init: {
        hooks: {
            action: () => {
                fsExtra.emptyDirSync(git_hooks_dir);

                configHooks.forEach(hook => {
                    spawnSync('ln', [
                        `-s ${hooks_dir_from_git_hooks_dir}/${hook}.js ${git_hooks_dir}/${hook}`
                    ], shellOptions);

                    spawnSync('chmod', [
                        `+x ${git_hooks_dir}/${hook}`,
                    ], shellOptions);

                    spawnSync('chmod', [
                        `+x ${hooksDir}/${hook}.js`,
                    ], shellOptions);
                });
            },
        },
    },
};

program
    .addCommand(
        new Command('init').description('initialize this repository with the required build/run-time artefacts')
            .addCommand(
                new Command('hooks').description('install git-hooks')
                    .action(constants.init.hooks.action)
            )
    );

program.parse(process.argv);

/**
 * init
 *      hooks
 *
 * ssh <USER>
 */
